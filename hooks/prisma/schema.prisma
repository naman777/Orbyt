// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String
  password String
  orbs     Orb[]
}

model Orb {
  id           String  @id @default(uuid())
  triggerId    String
  userId       Int
  trigger      Trigger?
  actions      Action[]
  orbRuns      OrbRun[]
  user         User @relation(fields: [userId], references: [id])
}

model Trigger {
  id          String  @id @default(uuid())
  orbId       String  @unique
  triggerId   String
  metadata    Json  @default("{}")
  type  AvailableTrigger @relation(fields: [triggerId], references: [id])
  orb       Orb                @relation(fields: [orbId], references: [id])
}

model Action {
  id        String  @id @default(uuid())
  orbId     String  
  orb       Orb     @relation(fields: [orbId], references: [id])
  actionId  String
  metadata    Json  @default("{}")
  type      AvailableAction @relation(fields: [actionId], references: [id])
  sortingOrder Int    @default(0)
}

model AvailableAction {
  id       String @id @default(uuid())
  name     String
  image    String
  actions  Action[]
}

model AvailableTrigger {
  id       String @id @default(uuid())
  name     String 
  image    String
  triggers Trigger[]
}

model OrbRun {
  id           String @id @default(uuid())
  orbId        String
  metadata     Json
  orb         Orb @relation(fields: [orbId], references: [id])
  zapRunOutbox OrbRunOutbox?
}

model OrbRunOutbox {
  id          String @id @default(uuid())
  orbRunId    String @unique
  orbRun      OrbRun @relation(fields: [orbRunId], references: [id])
}